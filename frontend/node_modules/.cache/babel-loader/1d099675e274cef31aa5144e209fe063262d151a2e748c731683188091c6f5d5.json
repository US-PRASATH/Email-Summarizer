{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uspra\\\\OneDrive\\\\Desktop\\\\Projects\\\\Email-Summarizer\\\\frontend\\\\src\\\\components\\\\EmailList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EmailSummary from './EmailSummary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailList = () => {\n  _s();\n  const [emails, setEmails] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [nextPageToken, setNextPageToken] = useState(null);\n\n  // Initial email fetch on component mount\n  useEffect(() => {\n    fetchEmails();\n  }, []);\n\n  // Function to fetch emails, with optional pageToken for pagination\n  const fetchEmails = async (pageToken = null) => {\n    try {\n      setLoading(true);\n      const response = await axios.get('http://localhost:5000/emails', {\n        params: {\n          pageToken: pageToken\n        }\n      });\n      if (Array.isArray(response.data.emails)) {\n        const emailsWithReadStatus = response.data.emails.map(email => ({\n          ...email,\n          isRead: false\n        }));\n        setEmails(prevEmails => prevEmails.concat(emailsWithReadStatus));\n        setNextPageToken(response.data.nextPageToken);\n      } else {\n        setError('Unexpected response format. Expected an array.');\n      }\n    } catch (err) {\n      console.error(\"Error fetching emails:\", err);\n      setError('Error fetching emails.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load more emails when clicking the Refresh button\n  const loadMoreEmails = () => {\n    if (nextPageToken) {\n      fetchEmails(nextPageToken);\n    } else {\n      setError('No more emails to load.');\n    }\n  };\n\n  // Function to mark an email as read\n  const markAsRead = id => {\n    axios.post(`http://localhost:5000/mark_as_read/${id}`);\n    setEmails(emails.map(email => email.ID === id ? {\n      ...email,\n      isRead: true\n    } : email));\n  };\n  if (loading && emails.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg font-semibold\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg font-semibold text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-list container mx-auto px-4\",\n    children: [emails.length > 0 ? emails.map(email => /*#__PURE__*/_jsxDEV(EmailSummary, {\n      email: email,\n      onMarkAsRead: markAsRead\n    }, email.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg font-semibold\",\n      children: \"No emails found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n        onClick: loadMoreEmails,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(EmailList, \"ZD4cIFIUJVxAzRkExI5Afo+KPPI=\");\n_c = EmailList;\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","useEffect","useState","axios","EmailSummary","jsxDEV","_jsxDEV","EmailList","_s","emails","setEmails","loading","setLoading","error","setError","nextPageToken","setNextPageToken","fetchEmails","pageToken","response","get","params","Array","isArray","data","emailsWithReadStatus","map","email","isRead","prevEmails","concat","err","console","loadMoreEmails","markAsRead","id","post","ID","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMarkAsRead","onClick","_c","$RefreshReg$"],"sources":["C:/Users/uspra/OneDrive/Desktop/Projects/Email-Summarizer/frontend/src/components/EmailList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport EmailSummary from './EmailSummary';\r\n\r\nconst EmailList = () => {\r\n    const [emails, setEmails] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [nextPageToken, setNextPageToken] = useState(null);\r\n\r\n    // Initial email fetch on component mount\r\n    useEffect(() => {\r\n        fetchEmails();\r\n    }, []);\r\n\r\n    // Function to fetch emails, with optional pageToken for pagination\r\n    const fetchEmails = async (pageToken = null) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.get('http://localhost:5000/emails', {\r\n                params: { pageToken: pageToken },\r\n            });\r\n            if (Array.isArray(response.data.emails)) {\r\n                const emailsWithReadStatus = response.data.emails.map(email => ({\r\n                    ...email,\r\n                    isRead: false,\r\n                }));\r\n                setEmails(prevEmails => prevEmails.concat(emailsWithReadStatus));\r\n                setNextPageToken(response.data.nextPageToken);\r\n            } else {\r\n                setError('Unexpected response format. Expected an array.');\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error fetching emails:\", err);\r\n            setError('Error fetching emails.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Load more emails when clicking the Refresh button\r\n    const loadMoreEmails = () => {\r\n        if (nextPageToken) {\r\n            fetchEmails(nextPageToken);\r\n        } else {\r\n            setError('No more emails to load.');\r\n        }\r\n    };\r\n\r\n    // Function to mark an email as read\r\n    const markAsRead = (id) => {\r\n        axios.post(`http://localhost:5000/mark_as_read/${id}`);\r\n        setEmails(emails.map(email =>\r\n            email.ID === id ? { ...email, isRead: true } : email\r\n        ));\r\n    };\r\n\r\n    if (loading && emails.length === 0) {\r\n        return <p className=\"text-center text-lg font-semibold\">Loading...</p>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p className=\"text-center text-lg font-semibold text-red-500\">{error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"email-list container mx-auto px-4\">\r\n            {emails.length > 0 ? (\r\n                emails.map((email) => (\r\n                    <EmailSummary key={email.ID} email={email} onMarkAsRead={markAsRead} />\r\n                ))\r\n            ) : (\r\n                <p className=\"text-center text-lg font-semibold\">No emails found.</p>\r\n            )}\r\n            <div className=\"flex justify-center mt-4\">\r\n                <button \r\n                    className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n                    onClick={loadMoreEmails}\r\n                >\r\n                    Refresh\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}