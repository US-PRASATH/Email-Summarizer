{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uspra\\\\OneDrive\\\\Desktop\\\\Projects\\\\Email-Summarizer\\\\frontend\\\\src\\\\components\\\\EmailList.jsx\",\n  _s = $RefreshSig$();\n// src/components/EmailList.js\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport EmailSummary from './EmailSummary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailList = () => {\n  _s();\n  const [emails, setEmails] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [pageToken, setPageToken] = useState(null);\n  const [isFetchingMore, setIsFetchingMore] = useState(false);\n\n  // Fetch emails with optional page token\n  const fetchEmails = useCallback(async (token = null) => {\n    setLoading(true);\n    try {\n      const response = await axios.get('http://localhost:5000/emails', {\n        params: {\n          pageToken: token\n        } // Send pageToken if available\n      });\n      if (Array.isArray(response.data.emails)) {\n        const emailsWithReadStatus = response.data.emails.map(email => ({\n          ...email,\n          isRead: false\n        }));\n        setEmails(prevEmails => [...prevEmails, ...emailsWithReadStatus]); // Append new emails\n        setPageToken(response.data.nextPageToken); // Update page token for next batch\n      } else {\n        setError('Unexpected response format. Expected an array.');\n      }\n    } catch (err) {\n      console.error(\"Error fetching emails:\", err);\n      setError('Error fetching emails.');\n    } finally {\n      setLoading(false);\n      setIsFetchingMore(false);\n    }\n  }, []);\n\n  // Initial fetch on component mount\n  useEffect(() => {\n    fetchEmails();\n  }, [fetchEmails]);\n\n  // Handle scroll for lazy loading\n\n  // Attach scroll event listener\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) return;\n      if (pageToken && !isFetchingMore) {\n        setIsFetchingMore(true);\n        fetchEmails(pageToken); // Fetch next batch of emails\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [handleScroll, pageToken, isFetchingMore]);\n\n  // Mark email as read\n  const markAsRead = id => {\n    axios.post('http://localhost:5000/mark_as_read/' + id);\n    setEmails(emails.map(email => email.ID === id ? {\n      ...email,\n      isRead: true\n    } : email));\n  };\n  if (loading && emails.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg font-semibold\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg font-semibold text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-list container mx-auto px-4\",\n    children: [emails.length > 0 ? emails.map(email => /*#__PURE__*/_jsxDEV(EmailSummary, {\n      email: email,\n      onMarkAsRead: markAsRead\n    }, email.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg font-semibold\",\n      children: \"No emails found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), isFetchingMore && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg font-semibold\",\n      children: \"Loading more...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(EmailList, \"1zySc/s5VQNVadZpNKlfNyrI3Ds=\");\n_c = EmailList;\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","EmailSummary","jsxDEV","_jsxDEV","EmailList","_s","emails","setEmails","loading","setLoading","error","setError","pageToken","setPageToken","isFetchingMore","setIsFetchingMore","fetchEmails","token","response","get","params","Array","isArray","data","emailsWithReadStatus","map","email","isRead","prevEmails","nextPageToken","err","console","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener","markAsRead","id","post","ID","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMarkAsRead","_c","$RefreshReg$"],"sources":["C:/Users/uspra/OneDrive/Desktop/Projects/Email-Summarizer/frontend/src/components/EmailList.jsx"],"sourcesContent":["// src/components/EmailList.js\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport EmailSummary from './EmailSummary';\r\n\r\nconst EmailList = () => {\r\n    const [emails, setEmails] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [pageToken, setPageToken] = useState(null);\r\n    const [isFetchingMore, setIsFetchingMore] = useState(false);\r\n\r\n    // Fetch emails with optional page token\r\n    const fetchEmails = useCallback(async (token = null) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/emails', {\r\n                params: { pageToken: token }  // Send pageToken if available\r\n            });\r\n            if (Array.isArray(response.data.emails)) {\r\n                const emailsWithReadStatus = response.data.emails.map(email => ({\r\n                    ...email,\r\n                    isRead: false,\r\n                }));\r\n                setEmails(prevEmails => [...prevEmails, ...emailsWithReadStatus]); // Append new emails\r\n                setPageToken(response.data.nextPageToken); // Update page token for next batch\r\n            } else {\r\n                setError('Unexpected response format. Expected an array.');\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error fetching emails:\", err);\r\n            setError('Error fetching emails.');\r\n        } finally {\r\n            setLoading(false);\r\n            setIsFetchingMore(false);\r\n        }\r\n    }, []);\r\n\r\n    // Initial fetch on component mount\r\n    useEffect(() => {\r\n        fetchEmails();\r\n    }, [fetchEmails]);\r\n\r\n    // Handle scroll for lazy loading\r\n    \r\n    // Attach scroll event listener\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight) return;\r\n            if (pageToken && !isFetchingMore) {\r\n                setIsFetchingMore(true);\r\n                fetchEmails(pageToken); // Fetch next batch of emails\r\n            }\r\n        };\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, [handleScroll, pageToken, isFetchingMore]);\r\n\r\n    // Mark email as read\r\n    const markAsRead = (id) => {\r\n        axios.post('http://localhost:5000/mark_as_read/' + id);\r\n        setEmails(emails.map(email =>\r\n            email.ID === id ? { ...email, isRead: true } : email\r\n        ));\r\n    };\r\n\r\n    if (loading && emails.length === 0) {\r\n        return <p className=\"text-center text-lg font-semibold\">Loading...</p>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p className=\"text-center text-lg font-semibold text-red-500\">{error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"email-list container mx-auto px-4\">\r\n            {emails.length > 0 ? (\r\n                emails.map((email) => (\r\n                    <EmailSummary key={email.ID} email={email} onMarkAsRead={markAsRead} />\r\n                ))\r\n            ) : (\r\n                <p className=\"text-center text-lg font-semibold\">No emails found.</p>\r\n            )}\r\n            {isFetchingMore && <p className=\"text-center text-lg font-semibold\">Loading more...</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}