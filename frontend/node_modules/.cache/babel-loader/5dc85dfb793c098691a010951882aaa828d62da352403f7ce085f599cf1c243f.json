{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uspra\\\\OneDrive\\\\Desktop\\\\Projects\\\\Email-Summarizer\\\\frontend\\\\src\\\\components\\\\EmailList.jsx\",\n  _s = $RefreshSig$();\n// src/components/EmailList.js\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EmailSummary from './EmailSummary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailList = () => {\n  _s();\n  const [emails, setEmails] = useState([]); // Initialize as an empty array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEmails = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/emails');\n        console.log(\"Response Data:\", response.data); // Log the response data\n\n        // Ensure response.data is an array\n        if (Array.isArray(response.data)) {\n          setEmails(response.data);\n        } else {\n          setError('Unexpected response format. Expected an array.');\n        }\n      } catch (err) {\n        console.error(\"Error fetching emails:\", err); // Log the error\n        setError('Error fetching emails.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmails();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg font-semibold\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg font-semibold text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-list container mx-auto px-4\",\n    children: emails.length > 0 ? emails.map(email => /*#__PURE__*/_jsxDEV(EmailSummary, {\n      email: email\n    }, email.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg font-semibold\",\n      children: \"No emails found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) // Display a message if no emails are available\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(EmailList, \"Euylchhn8zQbWsS8EhOkKL+D2kk=\");\n_c = EmailList;\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","useEffect","useState","axios","EmailSummary","jsxDEV","_jsxDEV","EmailList","_s","emails","setEmails","loading","setLoading","error","setError","fetchEmails","response","get","console","log","data","Array","isArray","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","email","id","_c","$RefreshReg$"],"sources":["C:/Users/uspra/OneDrive/Desktop/Projects/Email-Summarizer/frontend/src/components/EmailList.jsx"],"sourcesContent":["// src/components/EmailList.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport EmailSummary from './EmailSummary';\r\n\r\nconst EmailList = () => {\r\n    const [emails, setEmails] = useState([]); // Initialize as an empty array\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchEmails = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/emails');\r\n                \r\n                console.log(\"Response Data:\", response.data); // Log the response data\r\n\r\n                // Ensure response.data is an array\r\n                if (Array.isArray(response.data)) {\r\n                    setEmails(response.data);\r\n                } else {\r\n                    setError('Unexpected response format. Expected an array.');\r\n                }\r\n            } catch (err) {\r\n                console.error(\"Error fetching emails:\", err); // Log the error\r\n                setError('Error fetching emails.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        \r\n        fetchEmails();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <p className=\"text-center text-lg font-semibold\">Loading...</p>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p className=\"text-center text-lg font-semibold text-red-500\">{error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"email-list container mx-auto px-4\">\r\n            {emails.length > 0 ? (\r\n                emails.map((email) => (\r\n                    <EmailSummary key={email.id} email={email} />\r\n                ))\r\n            ) : (\r\n                <p className=\"text-center text-lg font-semibold\">No emails found.</p> // Display a message if no emails are available\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailList;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,8BAA8B,CAAC;QAEhEC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;;QAE9C;QACA,IAAIC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACI,IAAI,CAAC,EAAE;UAC9BV,SAAS,CAACM,QAAQ,CAACI,IAAI,CAAC;QAC5B,CAAC,MAAM;UACHN,QAAQ,CAAC,gDAAgD,CAAC;QAC9D;MACJ,CAAC,CAAC,OAAOS,GAAG,EAAE;QACVL,OAAO,CAACL,KAAK,CAAC,wBAAwB,EAAEU,GAAG,CAAC,CAAC,CAAC;QAC9CT,QAAQ,CAAC,wBAAwB,CAAC;MACtC,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAGkB,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1E;EAEA,IAAIhB,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAGkB,SAAS,EAAC,gDAAgD;MAAAC,QAAA,EAAEZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACpF;EAEA,oBACIvB,OAAA;IAAKkB,SAAS,EAAC,mCAAmC;IAAAC,QAAA,EAC7ChB,MAAM,CAACqB,MAAM,GAAG,CAAC,GACdrB,MAAM,CAACsB,GAAG,CAAEC,KAAK,iBACb1B,OAAA,CAACF,YAAY;MAAgB4B,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAC/C,CAAC,gBAEFvB,OAAA;MAAGkB,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;EACzE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACrB,EAAA,CAhDID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAkDf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}